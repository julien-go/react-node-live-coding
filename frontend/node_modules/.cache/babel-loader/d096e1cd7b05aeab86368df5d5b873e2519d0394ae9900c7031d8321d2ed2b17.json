{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Julien\\\\react-node-live-coding\\\\frontend\\\\src\\\\components\\\\AddWilder\\\\AddWilder.tsx\",\n  _s = $RefreshSig$();\nimport axios from \"axios\";\nimport { useState } from \"react\";\nimport styles from \"./AddWilder.module.css\";\nimport { useForm } from \"react-hook-form\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Input = _ref => {\n  let {\n    label,\n    register,\n    required\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      ...register(label, {\n        required\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_c = Input;\nconst AddWilder = _ref2 => {\n  _s();\n  let {\n    refresh\n  } = _ref2;\n  const [name, setName] = useState(\"\");\n  const [city, setCity] = useState(\"\");\n  const {\n    register,\n    handleSubmit\n  } = useForm();\n  const onSubmit = data => {\n    console.log(data);\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: styles.form,\n    onSubmit: e => {\n      e.preventDefault();\n      axios.post(\"http://localhost:5000/api/wilder/create\", {\n        name,\n        city\n      }).then(result => {\n        console.log(result);\n        setName(\"\");\n        setCity(\"\");\n        refresh();\n      }).catch(err => {\n        console.log(err);\n      });\n    },\n    children: [/*#__PURE__*/_jsxDEV(Input, {\n      label: \"name\",\n      register: register,\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"city\",\n      children: \"City :\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"city\",\n      value: city,\n      onChange: e => setCity(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Add Wilder\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(AddWilder, \"TPD9nEZHE6MZxAbLMnE3gofwQnY=\", false, function () {\n  return [useForm];\n});\n_c2 = AddWilder;\nexport default AddWilder;\nvar _c, _c2;\n$RefreshReg$(_c, \"Input\");\n$RefreshReg$(_c2, \"AddWilder\");","map":{"version":3,"names":["axios","useState","styles","useForm","jsxDEV","_jsxDEV","Fragment","_Fragment","Input","_ref","label","register","required","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","AddWilder","_ref2","_s","refresh","name","setName","city","setCity","handleSubmit","onSubmit","data","console","log","className","form","e","preventDefault","post","then","result","catch","err","htmlFor","type","value","onChange","target","_c2","$RefreshReg$"],"sources":["C:/Users/Julien/react-node-live-coding/frontend/src/components/AddWilder/AddWilder.tsx"],"sourcesContent":["import axios from \"axios\";\r\nimport { useState } from \"react\";\r\nimport styles from \"./AddWilder.module.css\";\r\n\r\nimport { Path, useForm, UseFormRegister } from \"react-hook-form\";\r\n\r\ninterface AddWilderProps {\r\n  refresh: () => void;\r\n}\r\n\r\ninterface FormValues {\r\n  name: string;\r\n  city: string;\r\n}\r\n\r\ntype InputProps = {\r\n  label: Path<FormValues>;\r\n  register: UseFormRegister<FormValues>;\r\n  required: boolean;\r\n};\r\n\r\nconst Input = ({ label, register, required }: InputProps) => {\r\n  return (\r\n    <>\r\n      <label>{label}</label>\r\n      <input {...register(label, { required })} />\r\n    </>\r\n  );\r\n};\r\n\r\nconst AddWilder = ({ refresh }: AddWilderProps) => {\r\n  const [name, setName] = useState<string>(\"\");\r\n  const [city, setCity] = useState<string>(\"\");\r\n\r\n  const { register, handleSubmit } = useForm<FormValues>();\r\n\r\n  const onSubmit = (data: FormValues) => {\r\n    console.log(data);\r\n  };\r\n\r\n  return (\r\n    <form\r\n      className={styles.form}\r\n      onSubmit={(e) => {\r\n        e.preventDefault();\r\n        axios\r\n          .post(\"http://localhost:5000/api/wilder/create\", { name, city })\r\n          .then((result) => {\r\n            console.log(result);\r\n            setName(\"\");\r\n            setCity(\"\");\r\n            refresh();\r\n          })\r\n          .catch((err) => {\r\n            console.log(err);\r\n          });\r\n      }}\r\n    >\r\n      <Input label=\"name\" register={register} required />\r\n      <br />\r\n      <label htmlFor=\"city\">City :</label>\r\n      <input\r\n        type=\"text\"\r\n        name=\"city\"\r\n        value={city}\r\n        onChange={(e) => setCity(e.target.value)}\r\n      />\r\n      <br />\r\n      <button type=\"submit\">Add Wilder</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default AddWilder;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}