{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Julien\\\\react-node-live-coding\\\\frontend\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport \"./App.css\";\nimport { useQuery, gql } from \"@apollo/client\";\nimport Header from \"./components/Header/Header\";\nimport Footer from \"./components/Footer/Footer\";\nimport Home from \"./pages/Home/Home\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GET_ALL_WILDERS = gql`\n  query GetAllWilders {\n    getAllWilders {\n      id\n      name\n      avatar\n      city\n      grades {\n        id\n        grade\n        skill {\n          id\n          name\n        }\n      }\n    }\n  }\n`;\nconst GET_ALL_SKILLS = gql`\n  query GetAllSkills {\n    getAllSkills {\n      id\n      name\n    }\n  }\n`;\nconst App = () => {\n  _s();\n  const dataWildersManipulation = dataFromApi => {\n    const newData = dataFromApi.map(wilder => {\n      return {\n        id: wilder.id,\n        name: wilder.name,\n        city: wilder.city,\n        avatar: wilder.avatar,\n        grades: wilder.grades.map(grade => {\n          return {\n            title: grade.skill.name,\n            grade: grade.grade\n          };\n        })\n      };\n    });\n    return newData;\n  };\n  const dataSkillsManipulation = dataFromApi => {\n    const newData = dataFromApi.map(skill => {\n      return {\n        id: skill.id,\n        title: skill.name\n      };\n    });\n    return newData;\n  };\n  const test = [];\n  const fetchData = async () => {};\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(GET_ALL_WILDERS);\n  const {\n    loading: loadingSkills,\n    error: errorSkills,\n    data: dataSkills\n  } = useQuery(GET_ALL_SKILLS);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Error :(\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Home, {\n      wildersData: dataWildersManipulation(data.getAllWilders),\n      skillsData: dataSkillsManipulation(dataSkills.getAllSkills),\n      fetchData: fetchData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"zG0yEVjPoO8GyEtxK3jOCqLJ3Zg=\", false, function () {\n  return [useQuery, useQuery];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useQuery","gql","Header","Footer","Home","jsxDEV","_jsxDEV","GET_ALL_WILDERS","GET_ALL_SKILLS","App","_s","dataWildersManipulation","dataFromApi","newData","map","wilder","id","name","city","avatar","grades","grade","title","skill","dataSkillsManipulation","test","fetchData","loading","error","data","loadingSkills","errorSkills","dataSkills","children","fileName","_jsxFileName","lineNumber","columnNumber","className","wildersData","getAllWilders","skillsData","getAllSkills","_c","$RefreshReg$"],"sources":["C:/Users/Julien/react-node-live-coding/frontend/src/App.tsx"],"sourcesContent":["import \"./App.css\";\n\nimport { useEffect, useState } from \"react\";\nimport { useQuery, gql } from \"@apollo/client\";\n\nimport Header from \"./components/Header/Header\";\nimport Footer from \"./components/Footer/Footer\";\nimport Home from \"./pages/Home/Home\";\n\nimport { WilderType } from \"./types/WilderType\";\nimport { SkillType } from \"./types/SkillType\";\nimport { async } from \"q\";\n\nconst GET_ALL_WILDERS = gql`\n  query GetAllWilders {\n    getAllWilders {\n      id\n      name\n      avatar\n      city\n      grades {\n        id\n        grade\n        skill {\n          id\n          name\n        }\n      }\n    }\n  }\n`;\n\nconst GET_ALL_SKILLS = gql`\n  query GetAllSkills {\n    getAllSkills {\n      id\n      name\n    }\n  }\n`;\n\nconst App = () => {\n  const dataWildersManipulation = (dataFromApi: any) => {\n    const newData = dataFromApi.map(\n      (wilder: {\n        id: number;\n        name: string;\n        city: string | null;\n        avatar: string | null;\n        grades: {\n          id: number;\n          grade: number;\n          skill: { id: number; name: string };\n        }[];\n      }) => {\n        return {\n          id: wilder.id,\n          name: wilder.name,\n          city: wilder.city,\n          avatar: wilder.avatar,\n          grades: wilder.grades.map((grade) => {\n            return {\n              title: grade.skill.name,\n              grade: grade.grade,\n            };\n          }),\n        };\n      }\n    );\n    return newData;\n  };\n\n  const dataSkillsManipulation = (dataFromApi: any) => {\n    const newData = dataFromApi.map((skill: { id: number; name: string }) => {\n      return {\n        id: skill.id,\n        title: skill.name,\n      };\n    });\n    return newData;\n  };\n\n  const test: SkillType[] = [];\n  const fetchData = async () => {};\n\n  const { loading, error, data } = useQuery(GET_ALL_WILDERS);\n  const {\n    loading: loadingSkills,\n    error: errorSkills,\n    data: dataSkills,\n  } = useQuery(GET_ALL_SKILLS);\n\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>Error :(</p>;\n\n  return (\n    <div className=\"App\">\n      <Header />\n      <Home\n        wildersData={dataWildersManipulation(data.getAllWilders)}\n        skillsData={dataSkillsManipulation(dataSkills.getAllSkills)}\n        fetchData={fetchData}\n      />\n      <Footer />\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}